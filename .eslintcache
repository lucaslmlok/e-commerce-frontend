[{"C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\index.tsx":"1","C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\reportWebVitals.ts":"2","C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\App.tsx":"3","C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\Screens\\ProductScreen.tsx":"4","C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\Screens\\HomeScreen.tsx":"5","C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\screens\\HomeScreen.tsx":"6","C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\screens\\ProductScreen.tsx":"7","C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\store\\store.ts":"8","C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\store\\reducers\\productReducer.ts":"9","C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\store\\reducerIdentifiers.ts":"10","C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\store\\actions\\productActions.ts":"11","C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\store\\reducers\\cartReducer.ts":"12","C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\store\\actions\\cartActions.ts":"13","C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\store\\reducers\\userReducer.ts":"14","C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\store\\actions\\userActions.ts":"15","C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\screens\\ProductsScreen.tsx":"16","C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\components\\CheckoutSteps.tsx":"17","C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\components\\ProductItem.tsx":"18","C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\screens\\checkout\\CartScreen.tsx":"19","C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\screens\\member\\SigninScreen.tsx":"20","C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\screens\\checkout\\PaymentScreen.tsx":"21","C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\screens\\checkout\\PlaceOrderScreen.tsx":"22","C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\screens\\checkout\\ShippingScreen.tsx":"23","C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\screens\\member\\RegisterScreen.tsx":"24","C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\screens\\member\\AccountScreen.tsx":"25"},{"size":670,"mtime":1607681898604,"results":"26","hashOfConfig":"27"},{"size":425,"mtime":499162500000,"results":"28","hashOfConfig":"27"},{"size":4617,"mtime":1607700952188,"results":"29","hashOfConfig":"27"},{"size":1748,"mtime":1607595362556,"results":"30","hashOfConfig":"27"},{"size":1258,"mtime":1607595430467,"results":"31","hashOfConfig":"27"},{"size":797,"mtime":1607679853535,"results":"32","hashOfConfig":"27"},{"size":2746,"mtime":1607691836877,"results":"33","hashOfConfig":"27"},{"size":638,"mtime":1607616804833,"results":"34","hashOfConfig":"27"},{"size":1447,"mtime":1607660989210,"results":"35","hashOfConfig":"27"},{"size":1642,"mtime":1607699804658,"results":"36","hashOfConfig":"27"},{"size":2730,"mtime":1607660949436,"results":"37","hashOfConfig":"27"},{"size":1615,"mtime":1607697908407,"results":"38","hashOfConfig":"27"},{"size":2145,"mtime":1607698133098,"results":"39","hashOfConfig":"27"},{"size":922,"mtime":1607701042603,"results":"40","hashOfConfig":"27"},{"size":1391,"mtime":1607699807474,"results":"41","hashOfConfig":"27"},{"size":6960,"mtime":1607661345900,"results":"42","hashOfConfig":"27"},{"size":414,"mtime":1607662797934,"results":"43","hashOfConfig":"27"},{"size":706,"mtime":1607679813750,"results":"44","hashOfConfig":"27"},{"size":3235,"mtime":1607693260484,"results":"45","hashOfConfig":"27"},{"size":2134,"mtime":1607680342783,"results":"46","hashOfConfig":"27"},{"size":1767,"mtime":1607693506307,"results":"47","hashOfConfig":"27"},{"size":4050,"mtime":1607697910535,"results":"48","hashOfConfig":"27"},{"size":2603,"mtime":1607693447564,"results":"49","hashOfConfig":"27"},{"size":2812,"mtime":1607680418971,"results":"50","hashOfConfig":"27"},{"size":1023,"mtime":1607681712592,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"kl811u",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"54"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"54"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\index.tsx",[],["113","114"],"C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\reportWebVitals.ts",[],"C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\App.tsx",["115","116","117"],"C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\Screens\\ProductScreen.tsx",[],["118","119"],"C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\Screens\\HomeScreen.tsx",[],"C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\screens\\HomeScreen.tsx",["120"],"import { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport * as productActions from \"../store/actions/productActions\";\r\nimport ProductItem from \"../components/ProductItem\";\r\n\r\nconst HomeScreen = (props) => {\r\n  const { products, loading, error } = useSelector((state) => state.product);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(productActions.listProduct());\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div>{error}</div>;\r\n  }\r\n\r\n  return (\r\n    <ul className=\"products\">\r\n      {products.map((product) => (\r\n        <li key={product._id}>\r\n          <ProductItem product={product} />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n","C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\screens\\ProductScreen.tsx",["121"],"import { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport { FaAngleLeft } from \"react-icons/fa\";\r\n\r\nimport * as productActions from \"../store/actions/productActions\";\r\n\r\ninterface ParamTypes {\r\n  id: string;\r\n}\r\n\r\nconst ProductScreen = (props) => {\r\n  const { id: paramId } = useParams<ParamTypes>();\r\n  const dispatch = useDispatch();\r\n  const { product, loading, error } = useSelector((state) => state.product);\r\n  const [qty, setQty] = useState(1);\r\n\r\n  const handleAddToCart = () => {\r\n    props.history.push(`/cart/${paramId}?qty=${qty}`);\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(productActions.detailsProduct(paramId));\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (error || !product) {\r\n    return <div>{error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"\">\r\n      <div className=\"back-to-result\">\r\n        <Link to=\"/\">\r\n          <FaAngleLeft className=\"mb-1 mr-1\" />\r\n          Back to result\r\n        </Link>\r\n      </div>\r\n      <div className=\"details\">\r\n        <div className=\"details-image\">\r\n          <img src={product.image} alt={product.name} />\r\n        </div>\r\n        <div className=\"details-info\">\r\n          <ul>\r\n            <li>\r\n              <h2>{product.name}</h2>\r\n            </li>\r\n            <li>\r\n              {product.rating} Stars ({product.numReviews} Reviews)\r\n            </li>\r\n            <li>\r\n              Price: <b className=\"price\">${product.price}</b>\r\n            </li>\r\n            <li>\r\n              <div>{product.desc}</div>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"details-action\">\r\n          <ul>\r\n            <li>\r\n              Status:{\" \"}\r\n              <b>{product.countInStock > 0 ? \"In Stock\" : \"Out of Stock\"}</b>\r\n            </li>\r\n            {product.countInStock > 0 && (\r\n              <>\r\n                <li>\r\n                  QTY:\r\n                  <select value={qty} onChange={(e) => setQty(+e.target.value)}>\r\n                    {[...Array(product.countInStock).keys()].map((idx) => (\r\n                      <option key={idx + 1} value={idx + 1}>\r\n                        {idx + 1}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </li>\r\n                <li>\r\n                  <button\r\n                    className=\"button primary mt-3\"\r\n                    onClick={handleAddToCart}\r\n                  >\r\n                    Add to Cart\r\n                  </button>\r\n                </li>\r\n              </>\r\n            )}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductScreen;\r\n","C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\store\\store.ts",[],"C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\store\\reducers\\productReducer.ts",["122"],"import {\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_RESET_SUCCESS,\r\n  PRODUCT_SAVE_FAIL,\r\n  PRODUCT_SAVE_REQUEST,\r\n  PRODUCT_SAVE_SUCCESS,\r\n} from \"../reducerIdentifiers\";\r\n\r\nconst initialState = {\r\n  products: [],\r\n  product: null,\r\n  loading: false,\r\n  error: null,\r\n  success: false,\r\n};\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case PRODUCT_LIST_REQUEST:\r\n    case PRODUCT_DETAILS_REQUEST:\r\n    case PRODUCT_SAVE_REQUEST:\r\n    case PRODUCT_DELETE_REQUEST:\r\n      return { ...state, loading: true };\r\n    case PRODUCT_LIST_SUCCESS:\r\n      return { ...state, loading: false, products: payload };\r\n    case PRODUCT_DETAILS_SUCCESS:\r\n      return { ...state, loading: false, product: payload };\r\n    case PRODUCT_SAVE_SUCCESS:\r\n      return { ...state, loading: false, product: payload, success: true };\r\n    case PRODUCT_DELETE_SUCCESS:\r\n      return { ...state, loading: false, success: true };\r\n    case PRODUCT_LIST_FAIL:\r\n    case PRODUCT_DETAILS_FAIL:\r\n    case PRODUCT_SAVE_FAIL:\r\n    case PRODUCT_DELETE_FAIL:\r\n      return { ...state, loading: false, error: payload };\r\n    case PRODUCT_RESET_SUCCESS:\r\n      return { ...state, success: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\store\\reducerIdentifiers.ts",[],"C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\store\\actions\\productActions.ts",[],"C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\store\\reducers\\cartReducer.ts",["123"],"C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\store\\actions\\cartActions.ts",[],"C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\store\\reducers\\userReducer.ts",["124"],"C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\store\\actions\\userActions.ts",[],"C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\screens\\ProductsScreen.tsx",["125","126"],"import { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport * as productActions from \"../store/actions/productActions\";\r\n\r\nconst ProductsScreen = (props) => {\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n\r\n  const [id, setId] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [price, setPrice] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n  const [brand, setBrand] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [countInStock, setCountInStock] = useState(\"\");\r\n  const [desc, setDesc] = useState(\"\");\r\n\r\n  const { loading, success, error, products } = useSelector(\r\n    (state) => state.product\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  const openModal = (product = null) => {\r\n    setModalVisible(true);\r\n    if (!product) return;\r\n\r\n    setId(product._id);\r\n    setName(product.name);\r\n    setPrice(product.price);\r\n    setImage(product.image);\r\n    setBrand(product.brand);\r\n    setCategory(product.category);\r\n    setCountInStock(product.countInStock);\r\n    setDesc(product.desc);\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      productActions.saveProduct({\r\n        _id: id,\r\n        name,\r\n        price,\r\n        image,\r\n        brand,\r\n        category,\r\n        countInStock,\r\n        desc,\r\n      })\r\n    );\r\n  };\r\n\r\n  const deleteProduct = (product) => {\r\n    dispatch(productActions.deleteProduct(product._id));\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setId(\"\");\r\n    setName(\"\");\r\n    setPrice(\"\");\r\n    setImage(\"\");\r\n    setBrand(\"\");\r\n    setCategory(\"\");\r\n    setCountInStock(\"\");\r\n    setDesc(\"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      dispatch(productActions.listProduct());\r\n      dispatch(productActions.resetSuccess());\r\n\r\n      setModalVisible(false);\r\n      resetForm();\r\n    }\r\n  }, [success]);\r\n\r\n  useEffect(() => {\r\n    dispatch(productActions.listProduct());\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"content content-margined\">\r\n      <div className=\"product-header\">\r\n        <h3>Products</h3>\r\n        {!modalVisible && (\r\n          <button className=\"button primary\" onClick={() => openModal()}>\r\n            Create Product\r\n          </button>\r\n        )}\r\n      </div>\r\n      {modalVisible ? (\r\n        <div className=\"form\">\r\n          <form onSubmit={submitHandler}>\r\n            <ul className=\"form-container\">\r\n              <li>\r\n                <h2>{id ? \"Edit\" : \"Create\"} Product</h2>\r\n              </li>\r\n              <li>\r\n                {loading && <div>Loading...</div>}\r\n                {error && <div>{error}</div>}\r\n              </li>\r\n              <li>\r\n                <label htmlFor=\"name\">Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  id=\"name\"\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                />\r\n              </li>\r\n              <li>\r\n                <label htmlFor=\"price\">Price</label>\r\n                <input\r\n                  type=\"number\"\r\n                  name=\"price\"\r\n                  id=\"price\"\r\n                  value={price}\r\n                  onChange={(e) => setPrice(e.target.value)}\r\n                />\r\n              </li>\r\n              <li>\r\n                <label htmlFor=\"image\">Image</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"image\"\r\n                  id=\"image\"\r\n                  value={image}\r\n                  onChange={(e) => setImage(e.target.value)}\r\n                />\r\n              </li>\r\n              <li>\r\n                <label htmlFor=\"brand\">Brand</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"brand\"\r\n                  id=\"brand\"\r\n                  value={brand}\r\n                  onChange={(e) => setBrand(e.target.value)}\r\n                />\r\n              </li>\r\n              <li>\r\n                <label htmlFor=\"category\">Category</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"category\"\r\n                  id=\"category\"\r\n                  value={category}\r\n                  onChange={(e) => setCategory(e.target.value)}\r\n                />\r\n              </li>\r\n              <li>\r\n                <label htmlFor=\"countInStock\">Count In Stock</label>\r\n                <input\r\n                  type=\"number\"\r\n                  name=\"countInStock\"\r\n                  id=\"countInStock\"\r\n                  value={countInStock}\r\n                  onChange={(e) => setCountInStock(e.target.value)}\r\n                />\r\n              </li>\r\n              <li>\r\n                <label htmlFor=\"desc\">Description</label>\r\n                <textarea\r\n                  name=\"desc\"\r\n                  id=\"desc\"\r\n                  value={desc}\r\n                  onChange={(e) => setDesc(e.target.value)}\r\n                ></textarea>\r\n              </li>\r\n              <li>\r\n                <button type=\"submit\" className=\"button primary\">\r\n                  {id ? \"Edit\" : \"Create\"}\r\n                </button>\r\n              </li>\r\n              <li>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"button secondary\"\r\n                  onClick={() => {\r\n                    setModalVisible(false);\r\n                    resetForm();\r\n                  }}\r\n                >\r\n                  Back\r\n                </button>\r\n              </li>\r\n            </ul>\r\n          </form>\r\n        </div>\r\n      ) : (\r\n        <div className=\"product-list\">\r\n          <table className=\"table\">\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>Name</th>\r\n                <th>Price</th>\r\n                <th>Category</th>\r\n                <th>Brand</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {products.map((product) => (\r\n                <tr key={product._id}>\r\n                  <td>{product._id}</td>\r\n                  <td>{product.name}</td>\r\n                  <td>{product.price}</td>\r\n                  <td>{product.category}</td>\r\n                  <td>{product.brand}</td>\r\n                  <td>\r\n                    <button\r\n                      className=\"button primary\"\r\n                      onClick={() => openModal(product)}\r\n                    >\r\n                      Edit\r\n                    </button>{\" \"}\r\n                    <button\r\n                      className=\"button secondary\"\r\n                      onClick={() => deleteProduct(product)}\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductsScreen;\r\n","C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\components\\CheckoutSteps.tsx",[],"C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\components\\ProductItem.tsx",[],"C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\screens\\checkout\\CartScreen.tsx",["127"],"import { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useParams, useLocation } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport * as cartActions from \"../../store/actions/cartActions\";\r\n\r\ninterface ParamTypes {\r\n  id: string;\r\n}\r\n\r\nconst CartScreen = (props) => {\r\n  const { id: paramId } = useParams<ParamTypes>();\r\n  const query = new URLSearchParams(useLocation().search);\r\n  const qty = +query.get(\"qty\") || 1;\r\n  const dispatch = useDispatch();\r\n  const { cartItems } = useSelector((state) => state.cart);\r\n\r\n  const removeFormCartHandler = (productId) => {\r\n    dispatch(cartActions.removeFormCart(productId));\r\n  };\r\n\r\n  const checkoutHandler = () => {\r\n    props.history.push(\"/signin?redirect=shipping\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (paramId) {\r\n      dispatch(cartActions.addToCart(paramId, qty));\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"cart\">\r\n      <div className=\"cart-list\">\r\n        <ul className=\"cart-list-container\">\r\n          <li className=\"pb-2\">\r\n            <h1>Shopping Cart</h1>\r\n            <h4>Price</h4>\r\n          </li>\r\n          {cartItems.length === 0 ? (\r\n            <div>Cart is empty</div>\r\n          ) : (\r\n            cartItems.map((item) => (\r\n              <li key={item.product}>\r\n                <div className=\"cart-image\">\r\n                  <img src={item.image} alt={item.name} />\r\n                </div>\r\n                <div className=\"cart-name\">\r\n                  <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                  <div>\r\n                    Qty:{\" \"}\r\n                    <select\r\n                      value={item.qty}\r\n                      onChange={(e) => {\r\n                        dispatch(\r\n                          cartActions.addToCart(item.product, +e.target.value)\r\n                        );\r\n                      }}\r\n                    >\r\n                      {[...Array(item.countInStock).keys()].map((idx) => (\r\n                        <option key={idx + 1} value={idx + 1}>\r\n                          {idx + 1}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"delete\"\r\n                      onClick={() => removeFormCartHandler(item.product)}\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                <div className=\"cart-price\">${item.price}</div>\r\n              </li>\r\n            ))\r\n          )}\r\n        </ul>\r\n      </div>\r\n      <div className=\"cart-action\">\r\n        <h3 className=\"font-weight-normal\">\r\n          Subtotal ({cartItems.reduce((acc, cur) => acc + cur.qty, 0)} items) :{\" \"}\r\n          <b>\r\n            $ {cartItems.reduce((acc, cur) => acc + cur.price * cur.qty, 0)}\r\n          </b>\r\n        </h3>\r\n        <button\r\n          className=\"button primary full-width mt-4\"\r\n          disabled={cartItems.length === 0}\r\n          onClick={checkoutHandler}\r\n        >\r\n          Proceed to Checkout\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CartScreen;\r\n","C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\screens\\member\\SigninScreen.tsx",["128"],"import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\n\r\nimport * as userActions from \"../../store/actions/userActions\";\r\n\r\nconst SigninScreen = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const query = new URLSearchParams(useLocation().search);\r\n  const redirect = query.get(\"redirect\");\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const { loading, userInfo, error } = useSelector((state) => state.user);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(userActions.signin(email, password));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      props.history.push(redirect || \"/\");\r\n    }\r\n  }, [userInfo]);\r\n\r\n  return (\r\n    <div className=\"form\">\r\n      <form onSubmit={submitHandler}>\r\n        <ul className=\"form-container\">\r\n          <li>\r\n            <h2>Sign-In</h2>\r\n          </li>\r\n          <li>\r\n            {loading && <div>Loading...</div>}\r\n            {error && <div>{error}</div>}\r\n          </li>\r\n          <li>\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              id=\"email\"\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n          </li>\r\n          <li>\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              id=\"password\"\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n          </li>\r\n          <li>\r\n            <button type=\"submit\" className=\"button primary\">\r\n              Signin\r\n            </button>\r\n          </li>\r\n          <li>\r\n            <Link\r\n              to={`/register${redirect && `?redirect=${redirect}`}`}\r\n              className=\"button secondary text-center\"\r\n            >\r\n              Create your Amazonify account\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SigninScreen;\r\n","C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\screens\\checkout\\PaymentScreen.tsx",["129"],"import { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport CheckoutSteps from \"../../components/CheckoutSteps\";\r\n\r\nimport * as cartActions from \"../../store/actions/cartActions\";\r\n\r\nconst PaymentScreen = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const query = new URLSearchParams(useLocation().search);\r\n  const redirect = query.get(\"redirect\");\r\n\r\n  const [paymentMethod, setPaymentMethod] = useState(\"paypal\");\r\n\r\n  const { shipping } = useSelector((state) => state.cart);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(cartActions.savePayment({ paymentMethod }));\r\n    props.history.push(\"placeorder\");\r\n  };\r\n\r\n  if (!shipping) {\r\n    props.history.push(\"/shipping\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <CheckoutSteps currentStep={2} />\r\n      <div className=\"form\">\r\n        <form onSubmit={submitHandler}>\r\n          <ul className=\"form-container\">\r\n            <li>\r\n              <h2>Payment</h2>\r\n            </li>\r\n            <li>\r\n              <div>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"paymentMethod\"\r\n                  id=\"paymentMethod\"\r\n                  value=\"paypal\"\r\n                  onChange={(e) => setPaymentMethod(e.target.value)}\r\n                />\r\n                <label htmlFor=\"paymentMethod\" className=\"ml-3\">\r\n                  Paypal\r\n                </label>\r\n              </div>\r\n            </li>\r\n            <li>\r\n              <button type=\"submit\" className=\"button primary\">\r\n                Continue\r\n              </button>\r\n            </li>\r\n          </ul>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaymentScreen;\r\n","C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\screens\\checkout\\PlaceOrderScreen.tsx",["130","131"],"C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\screens\\checkout\\ShippingScreen.tsx",["132"],"import { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport CheckoutSteps from \"../../components/CheckoutSteps\";\r\n\r\nimport * as cartActions from \"../../store/actions/cartActions\";\r\n\r\nconst ShippingScreen = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const query = new URLSearchParams(useLocation().search);\r\n  const redirect = query.get(\"redirect\");\r\n\r\n  const [address, setAddress] = useState(\"\");\r\n  const [city, setCity] = useState(\"\");\r\n  const [country, setCountry] = useState(\"\");\r\n  const [postalCode, setPostalCode] = useState(\"\");\r\n\r\n  const { userInfo } = useSelector((state) => state.user);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(cartActions.saveShipping({ address, city, country, postalCode }));\r\n    props.history.push(\"payment\");\r\n  };\r\n\r\n  if (!userInfo) {\r\n    props.history.push(\"/cart\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <CheckoutSteps currentStep={1} />\r\n      <div className=\"form\">\r\n        <form onSubmit={submitHandler}>\r\n          <ul className=\"form-container\">\r\n            <li>\r\n              <h2>Shipping</h2>\r\n            </li>\r\n            <li>\r\n              <label htmlFor=\"address\">Address</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"address\"\r\n                id=\"address\"\r\n                onChange={(e) => setAddress(e.target.value)}\r\n              />\r\n            </li>\r\n\r\n            <li>\r\n              <label htmlFor=\"city\">City</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"city\"\r\n                id=\"city\"\r\n                onChange={(e) => setCity(e.target.value)}\r\n              />\r\n            </li>\r\n\r\n            <li>\r\n              <label htmlFor=\"name\">Country</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"country\"\r\n                id=\"country\"\r\n                onChange={(e) => setCountry(e.target.value)}\r\n              />\r\n            </li>\r\n\r\n            <li>\r\n              <label htmlFor=\"name\">Postal Code</label>\r\n              <input\r\n                type=\"number\"\r\n                name=\"postalCode\"\r\n                id=\"postalCode\"\r\n                onChange={(e) => setPostalCode(e.target.value)}\r\n              />\r\n            </li>\r\n\r\n            <li>\r\n              <button type=\"submit\" className=\"button primary mt-3\">\r\n                Continue\r\n              </button>\r\n            </li>\r\n          </ul>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShippingScreen;\r\n","C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\screens\\member\\RegisterScreen.tsx",["133","134"],"import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\n\r\nimport * as userActions from \"../../store/actions/userActions\";\r\n\r\nconst RegisterScreen = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const query = new URLSearchParams(useLocation().search);\r\n  const redirect = query.get(\"redirect\");\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [rePassword, setRePassword] = useState(\"\");\r\n  const { loading, userInfo, error } = useSelector((state) => state.user);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(userActions.register(name, email, password));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      props.history.push(redirect || \"/\");\r\n    }\r\n  }, [userInfo]);\r\n\r\n  return (\r\n    <div className=\"form\">\r\n      <form onSubmit={submitHandler}>\r\n        <ul className=\"form-container\">\r\n          <li>\r\n            <h2>Create Account</h2>\r\n          </li>\r\n          <li>\r\n            {loading && <div>Loading...</div>}\r\n            {error && <div>{error}</div>}\r\n          </li>\r\n          <li>\r\n            <label htmlFor=\"name\">Name</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              id=\"name\"\r\n              onChange={(e) => setName(e.target.value)}\r\n            />\r\n          </li>\r\n          <li>\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              id=\"email\"\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n          </li>\r\n          <li>\r\n            <label htmlFor=\"rePassword\">Re-Enter Password</label>\r\n            <input\r\n              type=\"rePassword\"\r\n              name=\"rePassword\"\r\n              id=\"rePassword\"\r\n              onChange={(e) => setRePassword(e.target.value)}\r\n            />\r\n          </li>\r\n          <li>\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              id=\"password\"\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n          </li>\r\n          <li>\r\n            <button type=\"submit\" className=\"button primary\">\r\n              Register\r\n            </button>\r\n          </li>\r\n          <li>\r\n            Already have an account?\r\n            <Link\r\n              to={`/signin${redirect && `?redirect=${redirect}`}`}\r\n              className=\"button secondary text-center\"\r\n            >\r\n              Sign-in\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterScreen;\r\n","C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\screens\\member\\AccountScreen.tsx",[],{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","severity":1,"message":"140","line":24,"column":9,"nodeType":"141","messageId":"142","endLine":24,"endColumn":16},{"ruleId":"143","severity":1,"message":"144","line":109,"column":15,"nodeType":"145","endLine":109,"endColumn":27},{"ruleId":"143","severity":1,"message":"144","line":112,"column":15,"nodeType":"145","endLine":112,"endColumn":27},{"ruleId":"135","replacedBy":"146"},{"ruleId":"137","replacedBy":"147"},{"ruleId":"148","severity":1,"message":"149","line":14,"column":6,"nodeType":"150","endLine":14,"endColumn":8,"suggestions":"151"},{"ruleId":"148","severity":1,"message":"152","line":24,"column":6,"nodeType":"150","endLine":24,"endColumn":8,"suggestions":"153"},{"ruleId":"154","severity":1,"message":"155","line":25,"column":1,"nodeType":"156","endLine":50,"endColumn":3},{"ruleId":"154","severity":1,"message":"155","line":23,"column":1,"nodeType":"156","endLine":58,"endColumn":3},{"ruleId":"154","severity":1,"message":"155","line":19,"column":1,"nodeType":"156","endLine":35,"endColumn":3},{"ruleId":"148","severity":1,"message":"149","line":76,"column":6,"nodeType":"150","endLine":76,"endColumn":15,"suggestions":"157"},{"ruleId":"148","severity":1,"message":"149","line":80,"column":6,"nodeType":"150","endLine":80,"endColumn":8,"suggestions":"158"},{"ruleId":"148","severity":1,"message":"159","line":31,"column":6,"nodeType":"150","endLine":31,"endColumn":8,"suggestions":"160"},{"ruleId":"148","severity":1,"message":"161","line":26,"column":6,"nodeType":"150","endLine":26,"endColumn":16,"suggestions":"162"},{"ruleId":"139","severity":1,"message":"163","line":12,"column":9,"nodeType":"141","messageId":"142","endLine":12,"endColumn":17},{"ruleId":"139","severity":1,"message":"164","line":9,"column":11,"nodeType":"141","messageId":"142","endLine":9,"endColumn":21},{"ruleId":"148","severity":1,"message":"165","line":48,"column":6,"nodeType":"150","endLine":48,"endColumn":17,"suggestions":"166"},{"ruleId":"139","severity":1,"message":"163","line":12,"column":9,"nodeType":"141","messageId":"142","endLine":12,"endColumn":17},{"ruleId":"139","severity":1,"message":"167","line":16,"column":10,"nodeType":"141","messageId":"142","endLine":16,"endColumn":20},{"ruleId":"148","severity":1,"message":"161","line":28,"column":6,"nodeType":"150","endLine":28,"endColumn":16,"suggestions":"168"},"no-native-reassign",["169"],"no-negated-in-lhs",["170"],"@typescript-eslint/no-unused-vars","'overlay' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["169"],["170"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["171"],"React Hook useEffect has missing dependencies: 'dispatch' and 'paramId'. Either include them or remove the dependency array.",["172"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["173"],["174"],"React Hook useEffect has missing dependencies: 'dispatch', 'paramId', and 'qty'. Either include them or remove the dependency array.",["175"],"React Hook useEffect has missing dependencies: 'props.history' and 'redirect'. Either include them or remove the dependency array.",["176"],"'redirect' is assigned a value but never used.","'ParamTypes' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'props.history'. Either include them or remove the dependency array.",["177"],"'rePassword' is assigned a value but never used.",["178"],"no-global-assign","no-unsafe-negation",{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},{"desc":"179","fix":"185"},{"desc":"186","fix":"187"},{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},{"desc":"188","fix":"192"},"Update the dependencies array to be: [dispatch]",{"range":"193","text":"194"},"Update the dependencies array to be: [dispatch, paramId]",{"range":"195","text":"196"},"Update the dependencies array to be: [dispatch, success]",{"range":"197","text":"198"},{"range":"199","text":"194"},"Update the dependencies array to be: [dispatch, paramId, qty]",{"range":"200","text":"201"},"Update the dependencies array to be: [props.history, redirect, userInfo]",{"range":"202","text":"203"},"Update the dependencies array to be: [dispatch, orderInfo, props.history]",{"range":"204","text":"205"},{"range":"206","text":"203"},[441,443],"[dispatch]",[740,742],"[dispatch, paramId]",[1899,1908],"[dispatch, success]",[1985,1987],[906,908],"[dispatch, paramId, qty]",[791,801],"[props.history, redirect, userInfo]",[1240,1251],"[dispatch, orderInfo, props.history]",[895,905]]