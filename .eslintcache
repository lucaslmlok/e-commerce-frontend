[{"C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\index.tsx":"1","C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\reportWebVitals.ts":"2","C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\App.tsx":"3","C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\Screens\\ProductScreen.tsx":"4","C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\Screens\\HomeScreen.tsx":"5","C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\screens\\HomeScreen.tsx":"6","C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\screens\\ProductScreen.tsx":"7","C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\store\\store.ts":"8","C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\store\\reducers\\productReducer.ts":"9","C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\store\\reducerIdentifiers.ts":"10","C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\store\\actions\\productActions.ts":"11","C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\store\\reducers\\cartReducer.ts":"12","C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\store\\actions\\cartActions.ts":"13","C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\store\\reducers\\userReducer.ts":"14","C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\store\\actions\\userActions.ts":"15","C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\screens\\ProductsScreen.tsx":"16","C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\components\\CheckoutSteps.tsx":"17","C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\components\\ProductItem.tsx":"18","C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\screens\\checkout\\CartScreen.tsx":"19","C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\screens\\member\\SigninScreen.tsx":"20","C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\screens\\checkout\\PaymentScreen.tsx":"21","C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\screens\\checkout\\PlaceOrderScreen.tsx":"22","C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\screens\\checkout\\ShippingScreen.tsx":"23","C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\screens\\member\\RegisterScreen.tsx":"24","C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\screens\\member\\AccountScreen.tsx":"25","C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\components\\ErrorMsg.tsx":"26","C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\screens\\checkout\\OrderSuccessScreen.tsx":"27","C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\screens\\member\\OrderScreen.tsx":"28","C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\screens\\member\\OrderDetailsScreen.tsx":"29","C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\components\\OrderItem.tsx":"30"},{"size":773,"mtime":1608188384403,"results":"31","hashOfConfig":"32"},{"size":425,"mtime":499162500000,"results":"33","hashOfConfig":"32"},{"size":5101,"mtime":1608031018865,"results":"34","hashOfConfig":"32"},{"size":1748,"mtime":1607595362556,"results":"35","hashOfConfig":"32"},{"size":1258,"mtime":1607595430467,"results":"36","hashOfConfig":"32"},{"size":797,"mtime":1607679853535,"results":"37","hashOfConfig":"32"},{"size":2842,"mtime":1608019600030,"results":"38","hashOfConfig":"32"},{"size":638,"mtime":1607616804833,"results":"39","hashOfConfig":"32"},{"size":1447,"mtime":1607660989210,"results":"40","hashOfConfig":"32"},{"size":1642,"mtime":1607699804658,"results":"41","hashOfConfig":"32"},{"size":2895,"mtime":1608188309495,"results":"42","hashOfConfig":"32"},{"size":1615,"mtime":1607697908407,"results":"43","hashOfConfig":"32"},{"size":2212,"mtime":1608188273903,"results":"44","hashOfConfig":"32"},{"size":922,"mtime":1607701042603,"results":"45","hashOfConfig":"32"},{"size":1468,"mtime":1608188329406,"results":"46","hashOfConfig":"32"},{"size":6960,"mtime":1607661345900,"results":"47","hashOfConfig":"32"},{"size":860,"mtime":1608019997647,"results":"48","hashOfConfig":"32"},{"size":706,"mtime":1607679813750,"results":"49","hashOfConfig":"32"},{"size":3235,"mtime":1607693260484,"results":"50","hashOfConfig":"32"},{"size":2658,"mtime":1608127271256,"results":"51","hashOfConfig":"32"},{"size":2174,"mtime":1608022502344,"results":"52","hashOfConfig":"32"},{"size":4019,"mtime":1608023769582,"results":"53","hashOfConfig":"32"},{"size":3375,"mtime":1608023918215,"results":"54","hashOfConfig":"32"},{"size":3919,"mtime":1608127284596,"results":"55","hashOfConfig":"32"},{"size":1023,"mtime":1607681712592,"results":"56","hashOfConfig":"32"},{"size":415,"mtime":1608021351613,"results":"57","hashOfConfig":"32"},{"size":720,"mtime":1608024899660,"results":"58","hashOfConfig":"32"},{"size":1355,"mtime":1608188250945,"results":"59","hashOfConfig":"32"},{"size":235,"mtime":1608025028731,"results":"60","hashOfConfig":"32"},{"size":2012,"mtime":1608030933947,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"kl811u",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"64"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"64"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"64"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"64"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"64"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"64"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"64"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"64"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"64"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"64"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"64"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"64"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"64"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},"C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\index.tsx",[],["140","141"],"C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\reportWebVitals.ts",[],"C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\App.tsx",["142","143","144","145"],"import { useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { BrowserRouter, Route, Link } from \"react-router-dom\";\nimport { FaShoppingCart, FaUser } from \"react-icons/fa\";\nimport { OverlayTrigger, Popover } from \"react-bootstrap\";\n\nimport * as userActions from \"./store/actions/userActions\";\n\nimport HomeScreen from \"./screens/HomeScreen\";\nimport ProductScreen from \"./screens/ProductScreen\";\nimport ProductsScreen from \"./screens/ProductsScreen\";\nimport SigninScreen from \"./screens/member/SigninScreen\";\nimport RegisterScreen from \"./screens/member/RegisterScreen\";\nimport CartScreen from \"./screens/checkout/CartScreen\";\nimport ShippingScreen from \"./screens/checkout/ShippingScreen\";\nimport PaymentScreen from \"./screens/checkout/PaymentScreen\";\nimport PlaceOrderScreen from \"./screens/checkout/PlaceOrderScreen\";\nimport AccountScreen from \"./screens/member/AccountScreen\";\nimport OrderSuccessScreen from \"./screens/checkout/OrderSuccessScreen\";\nimport OrderScreen from \"./screens/member/OrderScreen\";\nimport OrderDetailsScreen from \"./screens/member/OrderDetailsScreen\";\n\nfunction App() {\n  const { userInfo } = useSelector((state) => state.user);\n  const dispatch = useDispatch();\n  const overlay = useRef(null);\n\n  const openMenu = () => {\n    return;\n    document.querySelector(\".sidebar\").classList.add(\"open\");\n  };\n\n  const closeMenu = () => {\n    return;\n    document.querySelector(\".sidebar\").classList.remove(\"open\");\n  };\n\n  const popoverClick = (type: string) => {\n    switch (type) {\n      case \"account\":\n        break;\n      case \"sign-out\":\n        dispatch(userActions.signOut());\n        break;\n    }\n    document.body.click();\n  };\n\n  return (\n    <BrowserRouter>\n      <div className=\"grid-container\">\n        <header className=\"header\">\n          <div className=\"brand\">\n            <button onClick={openMenu}>&#9776;</button>\n            <Link to=\"/\" className=\"ml-3\">\n              amazonify: React Online Shopping\n            </Link>\n          </div>\n          <div className=\"header-links\">\n            <Link to=\"/cart\">\n              <FaShoppingCart className=\"topbar-icon\" />\n              Cart\n            </Link>\n\n            {userInfo ? (\n              <OverlayTrigger\n                placement=\"bottom\"\n                trigger=\"click\"\n                rootClose={true}\n                overlay={\n                  <Popover id=\"popover-positioned-bottom\">\n                    <Popover.Content className=\"popover\">\n                      <h5>Your Account</h5>\n                      <ul>\n                        <li>\n                          <Link\n                            to=\"/account\"\n                            onClick={() => popoverClick(\"account\")}\n                          >\n                            Account\n                          </Link>\n                        </li>\n                        <li>\n                          <Link to=\"/\" onClick={() => popoverClick(\"sign-out\")}>\n                            Sign Out\n                          </Link>\n                        </li>\n                      </ul>\n                    </Popover.Content>\n                  </Popover>\n                }\n              >\n                <Link to=\"#\">\n                  <FaUser className=\"topbar-icon\" />\n                  {userInfo.name}\n                </Link>\n              </OverlayTrigger>\n            ) : (\n              <Link to=\"/signin\">\n                <FaUser className=\"topbar-icon\" />\n                Signin\n              </Link>\n            )}\n          </div>\n        </header>\n        {/* <aside className=\"sidebar\">\n          <h3>Shopping Categories</h3>\n          <button className=\"sidebar-close-btn\" onClick={closeMenu}>\n            x\n          </button>\n          <ul>\n            <li>\n              <a href=\"#\">Pants</a>\n            </li>\n            <li>\n              <a href=\"#\">Shirts</a>\n            </li>\n          </ul>\n        </aside> */}\n        <main className=\"main container\">\n          <div className=\"content\">\n            <Route path=\"/signin\" component={SigninScreen} />\n            <Route path=\"/register\" component={RegisterScreen} />\n            <Route path=\"/account\" component={AccountScreen} />\n            <Route path=\"/orders\" component={OrderScreen} />\n            <Route path=\"/order/:order_no\" component={OrderDetailsScreen} />\n\n            <Route path=\"/products\" component={ProductsScreen} />\n            <Route path=\"/product/:id\" component={ProductScreen} />\n\n            <Route path=\"/cart/:id?\" component={CartScreen} />\n            <Route path=\"/shipping\" component={ShippingScreen} />\n            <Route path=\"/payment\" component={PaymentScreen} />\n            <Route path=\"/placeorder\" component={PlaceOrderScreen} />\n            <Route\n              path=\"/order_success/:order_no?\"\n              component={OrderSuccessScreen}\n            />\n\n            <Route path=\"/\" exact={true} component={HomeScreen} />\n          </div>\n        </main>\n        <footer className=\"footer\">All right reserved.</footer>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\Screens\\ProductScreen.tsx",[],["146","147"],"C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\Screens\\HomeScreen.tsx",[],"C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\screens\\HomeScreen.tsx",["148"],"import { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport * as productActions from \"../store/actions/productActions\";\r\nimport ProductItem from \"../components/ProductItem\";\r\n\r\nconst HomeScreen = (props) => {\r\n  const { products, loading, error } = useSelector((state) => state.product);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(productActions.listProduct());\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div>{error}</div>;\r\n  }\r\n\r\n  return (\r\n    <ul className=\"products\">\r\n      {products.map((product) => (\r\n        <li key={product._id}>\r\n          <ProductItem product={product} />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n","C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\screens\\ProductScreen.tsx",["149"],"import { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport { FaAngleLeft } from \"react-icons/fa\";\r\n\r\nimport * as productActions from \"../store/actions/productActions\";\r\nimport * as cartActions from \"../store/actions/cartActions\";\r\n\r\ninterface ParamTypes {\r\n  id: string;\r\n}\r\n\r\nconst ProductScreen = (props) => {\r\n  const { id: paramId } = useParams<ParamTypes>();\r\n  const dispatch = useDispatch();\r\n  const { product, loading, error } = useSelector((state) => state.product);\r\n  const [qty, setQty] = useState(1);\r\n\r\n  const handleAddToCart = () => {\r\n    dispatch(cartActions.addToCart(product._id, qty));\r\n    props.history.push(\"/cart\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(productActions.detailsProduct(paramId));\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (error || !product) {\r\n    return <div>{error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"\">\r\n      <div className=\"back-to-result\">\r\n        <Link to=\"/\">\r\n          <FaAngleLeft className=\"mb-1 mr-1\" />\r\n          Back to result\r\n        </Link>\r\n      </div>\r\n      <div className=\"details\">\r\n        <div className=\"details-image\">\r\n          <img src={product.image} alt={product.name} />\r\n        </div>\r\n        <div className=\"details-info\">\r\n          <ul>\r\n            <li>\r\n              <h2>{product.name}</h2>\r\n            </li>\r\n            <li>\r\n              {product.rating} Stars ({product.numReviews} Reviews)\r\n            </li>\r\n            <li>\r\n              Price: <b className=\"price\">${product.price}</b>\r\n            </li>\r\n            <li>\r\n              <div>{product.desc}</div>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"details-action\">\r\n          <ul>\r\n            <li>\r\n              Status:{\" \"}\r\n              <b>{product.countInStock > 0 ? \"In Stock\" : \"Out of Stock\"}</b>\r\n            </li>\r\n            {product.countInStock > 0 && (\r\n              <>\r\n                <li>\r\n                  QTY:\r\n                  <select value={qty} onChange={(e) => setQty(+e.target.value)}>\r\n                    {[...Array(product.countInStock).keys()].map((idx) => (\r\n                      <option key={idx + 1} value={idx + 1}>\r\n                        {idx + 1}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </li>\r\n                <li>\r\n                  <button\r\n                    className=\"button primary mt-3\"\r\n                    onClick={handleAddToCart}\r\n                  >\r\n                    Add to Cart\r\n                  </button>\r\n                </li>\r\n              </>\r\n            )}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductScreen;\r\n","C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\store\\store.ts",[],"C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\store\\reducers\\productReducer.ts",["150"],"import {\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_RESET_SUCCESS,\r\n  PRODUCT_SAVE_FAIL,\r\n  PRODUCT_SAVE_REQUEST,\r\n  PRODUCT_SAVE_SUCCESS,\r\n} from \"../reducerIdentifiers\";\r\n\r\nconst initialState = {\r\n  products: [],\r\n  product: null,\r\n  loading: false,\r\n  error: null,\r\n  success: false,\r\n};\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case PRODUCT_LIST_REQUEST:\r\n    case PRODUCT_DETAILS_REQUEST:\r\n    case PRODUCT_SAVE_REQUEST:\r\n    case PRODUCT_DELETE_REQUEST:\r\n      return { ...state, loading: true };\r\n    case PRODUCT_LIST_SUCCESS:\r\n      return { ...state, loading: false, products: payload };\r\n    case PRODUCT_DETAILS_SUCCESS:\r\n      return { ...state, loading: false, product: payload };\r\n    case PRODUCT_SAVE_SUCCESS:\r\n      return { ...state, loading: false, product: payload, success: true };\r\n    case PRODUCT_DELETE_SUCCESS:\r\n      return { ...state, loading: false, success: true };\r\n    case PRODUCT_LIST_FAIL:\r\n    case PRODUCT_DETAILS_FAIL:\r\n    case PRODUCT_SAVE_FAIL:\r\n    case PRODUCT_DELETE_FAIL:\r\n      return { ...state, loading: false, error: payload };\r\n    case PRODUCT_RESET_SUCCESS:\r\n      return { ...state, success: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\store\\reducerIdentifiers.ts",[],"C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\store\\actions\\productActions.ts",[],"C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\store\\reducers\\cartReducer.ts",["151"],"import Cookie from \"js-cookie\";\r\n\r\nimport {\r\n  CART_ADD_ITEM,\r\n  CART_CLEAR,\r\n  CART_REMOVE_ITEM,\r\n  CART_SAVE_PAYMENT,\r\n  CART_SAVE_SHIPPING,\r\n  PLACE_ORDER_FAIL,\r\n  PLACE_ORDER_REQUEST,\r\n  PLACE_ORDER_SUCCESS,\r\n} from \"../reducerIdentifiers\";\r\n\r\nconst initialState = {\r\n  cartItems: Cookie.getJSON(\"cartItems\") || [],\r\n  shipping: null,\r\n  payment: null,\r\n  loading: false,\r\n  orderInfo: null,\r\n  error: null,\r\n};\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case CART_ADD_ITEM:\r\n      const existingProduct = state.cartItems.find((item) => {\r\n        return item.product === payload.product;\r\n      });\r\n      if (existingProduct) {\r\n        return {\r\n          ...state,\r\n          cartItems: state.cartItems.map((item) => {\r\n            return item.product === existingProduct.product ? payload : item;\r\n          }),\r\n        };\r\n      }\r\n      return { ...state, cartItems: [...state.cartItems, payload] };\r\n    case CART_REMOVE_ITEM:\r\n      return {\r\n        ...state,\r\n        cartItems: state.cartItems.filter((item) => item.product !== payload),\r\n      };\r\n    case CART_SAVE_SHIPPING:\r\n      return { ...state, shipping: payload };\r\n    case CART_SAVE_PAYMENT:\r\n      return { ...state, payment: payload };\r\n    case PLACE_ORDER_REQUEST:\r\n      return { ...state, loading: true };\r\n    case PLACE_ORDER_SUCCESS:\r\n      return { ...state, loading: false, orderInfo: payload };\r\n    case PLACE_ORDER_FAIL:\r\n      return { ...state, loading: false, error: payload };\r\n    case CART_CLEAR:\r\n      return initialState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\store\\actions\\cartActions.ts",[],"C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\store\\reducers\\userReducer.ts",["152"],"import Cookie from \"js-cookie\";\r\n\r\nimport {\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_SIGNIN_FAIL,\r\n  USER_SIGNIN_REQUEST,\r\n  USER_SIGNIN_SUCCESS,\r\n  USER_SIGN_OUT,\r\n} from \"../reducerIdentifiers\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  userInfo: Cookie.getJSON(\"userInfo\") || null,\r\n  error: null,\r\n};\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case USER_SIGNIN_REQUEST:\r\n    case USER_REGISTER_REQUEST:\r\n      return { ...state, loading: true };\r\n    case USER_SIGNIN_SUCCESS:\r\n    case USER_REGISTER_SUCCESS:\r\n      return { ...state, loading: false, userInfo: payload };\r\n    case USER_SIGNIN_FAIL:\r\n    case USER_REGISTER_FAIL:\r\n      return { ...state, loading: false, error: payload };\r\n    case USER_SIGN_OUT:\r\n      return { loading: false, userInfo: null, error: null };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\store\\actions\\userActions.ts",[],"C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\screens\\ProductsScreen.tsx",["153","154"],"import { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport * as productActions from \"../store/actions/productActions\";\r\n\r\nconst ProductsScreen = (props) => {\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n\r\n  const [id, setId] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [price, setPrice] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n  const [brand, setBrand] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [countInStock, setCountInStock] = useState(\"\");\r\n  const [desc, setDesc] = useState(\"\");\r\n\r\n  const { loading, success, error, products } = useSelector(\r\n    (state) => state.product\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  const openModal = (product = null) => {\r\n    setModalVisible(true);\r\n    if (!product) return;\r\n\r\n    setId(product._id);\r\n    setName(product.name);\r\n    setPrice(product.price);\r\n    setImage(product.image);\r\n    setBrand(product.brand);\r\n    setCategory(product.category);\r\n    setCountInStock(product.countInStock);\r\n    setDesc(product.desc);\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      productActions.saveProduct({\r\n        _id: id,\r\n        name,\r\n        price,\r\n        image,\r\n        brand,\r\n        category,\r\n        countInStock,\r\n        desc,\r\n      })\r\n    );\r\n  };\r\n\r\n  const deleteProduct = (product) => {\r\n    dispatch(productActions.deleteProduct(product._id));\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setId(\"\");\r\n    setName(\"\");\r\n    setPrice(\"\");\r\n    setImage(\"\");\r\n    setBrand(\"\");\r\n    setCategory(\"\");\r\n    setCountInStock(\"\");\r\n    setDesc(\"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      dispatch(productActions.listProduct());\r\n      dispatch(productActions.resetSuccess());\r\n\r\n      setModalVisible(false);\r\n      resetForm();\r\n    }\r\n  }, [success]);\r\n\r\n  useEffect(() => {\r\n    dispatch(productActions.listProduct());\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"content content-margined\">\r\n      <div className=\"product-header\">\r\n        <h3>Products</h3>\r\n        {!modalVisible && (\r\n          <button className=\"button primary\" onClick={() => openModal()}>\r\n            Create Product\r\n          </button>\r\n        )}\r\n      </div>\r\n      {modalVisible ? (\r\n        <div className=\"form\">\r\n          <form onSubmit={submitHandler}>\r\n            <ul className=\"form-container\">\r\n              <li>\r\n                <h2>{id ? \"Edit\" : \"Create\"} Product</h2>\r\n              </li>\r\n              <li>\r\n                {loading && <div>Loading...</div>}\r\n                {error && <div>{error}</div>}\r\n              </li>\r\n              <li>\r\n                <label htmlFor=\"name\">Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  id=\"name\"\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                />\r\n              </li>\r\n              <li>\r\n                <label htmlFor=\"price\">Price</label>\r\n                <input\r\n                  type=\"number\"\r\n                  name=\"price\"\r\n                  id=\"price\"\r\n                  value={price}\r\n                  onChange={(e) => setPrice(e.target.value)}\r\n                />\r\n              </li>\r\n              <li>\r\n                <label htmlFor=\"image\">Image</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"image\"\r\n                  id=\"image\"\r\n                  value={image}\r\n                  onChange={(e) => setImage(e.target.value)}\r\n                />\r\n              </li>\r\n              <li>\r\n                <label htmlFor=\"brand\">Brand</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"brand\"\r\n                  id=\"brand\"\r\n                  value={brand}\r\n                  onChange={(e) => setBrand(e.target.value)}\r\n                />\r\n              </li>\r\n              <li>\r\n                <label htmlFor=\"category\">Category</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"category\"\r\n                  id=\"category\"\r\n                  value={category}\r\n                  onChange={(e) => setCategory(e.target.value)}\r\n                />\r\n              </li>\r\n              <li>\r\n                <label htmlFor=\"countInStock\">Count In Stock</label>\r\n                <input\r\n                  type=\"number\"\r\n                  name=\"countInStock\"\r\n                  id=\"countInStock\"\r\n                  value={countInStock}\r\n                  onChange={(e) => setCountInStock(e.target.value)}\r\n                />\r\n              </li>\r\n              <li>\r\n                <label htmlFor=\"desc\">Description</label>\r\n                <textarea\r\n                  name=\"desc\"\r\n                  id=\"desc\"\r\n                  value={desc}\r\n                  onChange={(e) => setDesc(e.target.value)}\r\n                ></textarea>\r\n              </li>\r\n              <li>\r\n                <button type=\"submit\" className=\"button primary\">\r\n                  {id ? \"Edit\" : \"Create\"}\r\n                </button>\r\n              </li>\r\n              <li>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"button secondary\"\r\n                  onClick={() => {\r\n                    setModalVisible(false);\r\n                    resetForm();\r\n                  }}\r\n                >\r\n                  Back\r\n                </button>\r\n              </li>\r\n            </ul>\r\n          </form>\r\n        </div>\r\n      ) : (\r\n        <div className=\"product-list\">\r\n          <table className=\"table\">\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>Name</th>\r\n                <th>Price</th>\r\n                <th>Category</th>\r\n                <th>Brand</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {products.map((product) => (\r\n                <tr key={product._id}>\r\n                  <td>{product._id}</td>\r\n                  <td>{product.name}</td>\r\n                  <td>{product.price}</td>\r\n                  <td>{product.category}</td>\r\n                  <td>{product.brand}</td>\r\n                  <td>\r\n                    <button\r\n                      className=\"button primary\"\r\n                      onClick={() => openModal(product)}\r\n                    >\r\n                      Edit\r\n                    </button>{\" \"}\r\n                    <button\r\n                      className=\"button secondary\"\r\n                      onClick={() => deleteProduct(product)}\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductsScreen;\r\n","C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\components\\CheckoutSteps.tsx",[],"C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\components\\ProductItem.tsx",[],"C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\screens\\checkout\\CartScreen.tsx",["155"],"import { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useParams, useLocation } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport * as cartActions from \"../../store/actions/cartActions\";\r\n\r\ninterface ParamTypes {\r\n  id: string;\r\n}\r\n\r\nconst CartScreen = (props) => {\r\n  const { id: paramId } = useParams<ParamTypes>();\r\n  const query = new URLSearchParams(useLocation().search);\r\n  const qty = +query.get(\"qty\") || 1;\r\n  const dispatch = useDispatch();\r\n  const { cartItems } = useSelector((state) => state.cart);\r\n\r\n  const removeFormCartHandler = (productId) => {\r\n    dispatch(cartActions.removeFormCart(productId));\r\n  };\r\n\r\n  const checkoutHandler = () => {\r\n    props.history.push(\"/signin?redirect=shipping\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (paramId) {\r\n      dispatch(cartActions.addToCart(paramId, qty));\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"cart\">\r\n      <div className=\"cart-list\">\r\n        <ul className=\"cart-list-container\">\r\n          <li className=\"pb-2\">\r\n            <h1>Shopping Cart</h1>\r\n            <h4>Price</h4>\r\n          </li>\r\n          {cartItems.length === 0 ? (\r\n            <div>Cart is empty</div>\r\n          ) : (\r\n            cartItems.map((item) => (\r\n              <li key={item.product}>\r\n                <div className=\"cart-image\">\r\n                  <img src={item.image} alt={item.name} />\r\n                </div>\r\n                <div className=\"cart-name\">\r\n                  <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                  <div>\r\n                    Qty:{\" \"}\r\n                    <select\r\n                      value={item.qty}\r\n                      onChange={(e) => {\r\n                        dispatch(\r\n                          cartActions.addToCart(item.product, +e.target.value)\r\n                        );\r\n                      }}\r\n                    >\r\n                      {[...Array(item.countInStock).keys()].map((idx) => (\r\n                        <option key={idx + 1} value={idx + 1}>\r\n                          {idx + 1}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"delete\"\r\n                      onClick={() => removeFormCartHandler(item.product)}\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                <div className=\"cart-price\">${item.price}</div>\r\n              </li>\r\n            ))\r\n          )}\r\n        </ul>\r\n      </div>\r\n      <div className=\"cart-action\">\r\n        <h3 className=\"font-weight-normal\">\r\n          Subtotal ({cartItems.reduce((acc, cur) => acc + cur.qty, 0)} items) :{\" \"}\r\n          <b>\r\n            $ {cartItems.reduce((acc, cur) => acc + cur.price * cur.qty, 0)}\r\n          </b>\r\n        </h3>\r\n        <button\r\n          className=\"button primary full-width mt-4\"\r\n          disabled={cartItems.length === 0}\r\n          onClick={checkoutHandler}\r\n        >\r\n          Proceed to Checkout\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CartScreen;\r\n","C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\screens\\member\\SigninScreen.tsx",["156"],"import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\n\r\nimport * as userActions from \"../../store/actions/userActions\";\r\nimport CheckoutSteps from \"../../components/CheckoutSteps\";\r\nimport ErrorMsg from \"../../components/ErrorMsg\";\r\n\r\nconst schema = yup.object().shape({\r\n  email: yup.string().email().required(),\r\n  password: yup.string().required(),\r\n});\r\n\r\nconst SigninScreen = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const query = new URLSearchParams(useLocation().search);\r\n  const redirect = query.get(\"redirect\");\r\n\r\n  const { register, handleSubmit, errors } = useForm({\r\n    resolver: yupResolver(schema),\r\n  });\r\n\r\n  const { loading, userInfo, error } = useSelector((state) => state.user);\r\n\r\n  const onSubmit = (data) => {\r\n    dispatch(userActions.signin(data.email, data.password));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      props.history.push(redirect || \"/\");\r\n    }\r\n  }, [userInfo]);\r\n\r\n  return (\r\n    <div>\r\n      {redirect && <CheckoutSteps currentStep={0} />}\r\n      <div className=\"form\">\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <ul className=\"form-container\">\r\n            <li>\r\n              <h2>Sign-In</h2>\r\n            </li>\r\n            <li>\r\n              {loading && <div>Loading...</div>}\r\n              {error && <div className=\"text-danger\">{error}</div>}\r\n            </li>\r\n            <li>\r\n              <label htmlFor=\"email\">Email</label>\r\n              <input type=\"email\" name=\"email\" id=\"email\" ref={register} />\r\n              <ErrorMsg msg={errors.email?.message} />\r\n            </li>\r\n            <li>\r\n              <label htmlFor=\"password\">Password</label>\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                id=\"password\"\r\n                ref={register}\r\n              />\r\n              <ErrorMsg msg={errors.password?.message} />\r\n            </li>\r\n            <li>\r\n              <button type=\"submit\" className=\"button primary\">\r\n                Signin\r\n              </button>\r\n            </li>\r\n            <li>\r\n              <Link\r\n                to={`/register${redirect ? `?redirect=${redirect}` : ''}`}\r\n                className=\"button secondary text-center\"\r\n              >\r\n                Create your Amazonify account\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SigninScreen;\r\n","C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\screens\\checkout\\PaymentScreen.tsx",["157","158"],"import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\n\r\nimport * as cartActions from \"../../store/actions/cartActions\";\r\nimport CheckoutSteps from \"../../components/CheckoutSteps\";\r\nimport ErrorMsg from \"../../components/ErrorMsg\";\r\n\r\nconst schema = yup.object().shape({\r\n  paymentMethod: yup.string().required(),\r\n});\r\n\r\nconst PaymentScreen = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { register, handleSubmit, errors, setValue } = useForm({\r\n    resolver: yupResolver(schema),\r\n    defaultValues: {\r\n      paymentMethod: \"\",\r\n    },\r\n  });\r\n\r\n  const { shipping, payment } = useSelector((state) => state.cart);\r\n\r\n  const onSubmit = (data) => {\r\n    dispatch(cartActions.savePayment(data));\r\n    props.history.push(\"placeorder\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (payment) {\r\n      setValue(\"paymentMethod\", payment.paymentMethod, {\r\n        shouldValidate: true,\r\n      });\r\n    }\r\n  }, [shipping]);\r\n\r\n  if (!shipping) {\r\n    props.history.push(\"/shipping\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <CheckoutSteps currentStep={2} />\r\n      <div className=\"form\">\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <ul className=\"form-container\">\r\n            <li>\r\n              <h2>Payment</h2>\r\n            </li>\r\n            <li>\r\n              <div>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"paymentMethod\"\r\n                  id=\"paypal\"\r\n                  value=\"paypal\"\r\n                  ref={register({ required: true })}\r\n                />\r\n                <label htmlFor=\"paypal\" className=\"ml-3\">\r\n                  Paypal\r\n                </label>\r\n                <ErrorMsg msg={errors.paymentMethod?.message} />\r\n              </div>\r\n            </li>\r\n            <li>\r\n              <button type=\"submit\" className=\"button primary\">\r\n                Continue\r\n              </button>\r\n            </li>\r\n          </ul>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaymentScreen;\r\n","C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\screens\\checkout\\PlaceOrderScreen.tsx",["159","160"],"import { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\n\r\nimport CheckoutSteps from \"../../components/CheckoutSteps\";\r\nimport * as cartActions from \"../../store/actions/cartActions\";\r\n\r\ninterface ParamTypes {\r\n  id: string;\r\n}\r\n\r\nconst PlaceOrderScreen = (props) => {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    cartItems,\r\n    shipping,\r\n    payment,\r\n    orderInfo,\r\n    loading,\r\n    error,\r\n  } = useSelector((state) => state.cart);\r\n\r\n  const itemsPrice = cartItems.reduce((acc, cur) => {\r\n    return acc + cur.price * cur.qty;\r\n  }, 0);\r\n  const shippingPrice = itemsPrice > 100 ? 0 : 10;\r\n  const taxPrice = 0.15 * itemsPrice;\r\n  const totalPrice = itemsPrice + shippingPrice + taxPrice;\r\n\r\n  const placeOrderHandler = () => {\r\n    dispatch(\r\n      cartActions.placeOrder({\r\n        itemsPrice,\r\n        shippingPrice,\r\n        taxPrice,\r\n        totalPrice,\r\n      })\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (orderInfo && orderInfo._id) {\r\n      const orderId = orderInfo._id;\r\n      dispatch(cartActions.clearCart());\r\n      props.history.push(`/order_success/${orderId}`);\r\n    }\r\n  }, [orderInfo]);\r\n\r\n  if (!shipping) {\r\n    props.history.push(\"/shipping\");\r\n  }\r\n\r\n  if (!payment) {\r\n    props.history.push(\"/payment\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <CheckoutSteps currentStep={3} />\r\n      <div className=\"placeorder\">\r\n        <div className=\"placeorder-info\">\r\n          <div>\r\n            <h3>Shipping</h3>\r\n            <div>\r\n              {`${shipping.address}, ${shipping.city}, ${shipping.country}, ${shipping.postalCode}`}\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <h3>Payment</h3>\r\n            <div>{payment.paymentMethod}</div>\r\n          </div>\r\n          <div>\r\n            <ul className=\"cart-list-container\">\r\n              <li>\r\n                <h3>Shopping Cart</h3>\r\n                <div>Price</div>\r\n              </li>\r\n              {cartItems.length === 0 ? (\r\n                <div>Cart is empty</div>\r\n              ) : (\r\n                cartItems.map((item) => (\r\n                  <li key={item.product}>\r\n                    <div className=\"cart-image\">\r\n                      <img src={item.image} alt={item.name} />\r\n                    </div>\r\n                    <div className=\"cart-name\">\r\n                      <Link to=\"#\">{item.name}</Link>\r\n                      <div>Qty: {item.qty}</div>\r\n                    </div>\r\n                    <div className=\"cart-price\">${item.price}</div>\r\n                  </li>\r\n                ))\r\n              )}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <div className=\"placeorder-action\">\r\n          <ul>\r\n            <li>\r\n              <button\r\n                className=\"button primary full-width\"\r\n                onClick={() => placeOrderHandler()}\r\n                disabled={loading}\r\n              >\r\n                Place Order\r\n                {loading && (\r\n                  <div className=\"loading-icon\">\r\n                    <ClipLoader size={20} color=\"#fff\" />\r\n                  </div>\r\n                )}\r\n              </button>\r\n            </li>\r\n            {error && (\r\n              <li>\r\n                <div className=\"text-danger\">{error}</div>\r\n              </li>\r\n            )}\r\n            <li>\r\n              <h3>Order Summary</h3>\r\n            </li>\r\n            <li>\r\n              <div>Items</div>\r\n              <div>${itemsPrice}</div>\r\n            </li>\r\n            <li>\r\n              <div>Shipping</div>\r\n              <div>${shippingPrice}</div>\r\n            </li>\r\n            <li>\r\n              <div>Tax</div>\r\n              <div>${taxPrice}</div>\r\n            </li>\r\n            <li>\r\n              <div>Order Total</div>\r\n              <div>${totalPrice}</div>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlaceOrderScreen;\r\n","C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\screens\\checkout\\ShippingScreen.tsx",["161"],"import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\n\r\nimport * as cartActions from \"../../store/actions/cartActions\";\r\nimport CheckoutSteps from \"../../components/CheckoutSteps\";\r\nimport ErrorMsg from \"../../components/ErrorMsg\";\r\n\r\nconst schema = yup.object().shape({\r\n  address: yup.string().required(),\r\n  city: yup.string().required(),\r\n  country: yup.string().required(),\r\n  postalCode: yup\r\n    .string()\r\n    .matches(/^\\d+$/, \"Postal Code must be a number\")\r\n    .required(),\r\n});\r\n\r\nconst ShippingScreen = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { register, handleSubmit, errors, setValue } = useForm({\r\n    resolver: yupResolver(schema),\r\n  });\r\n\r\n  const { userInfo } = useSelector((state) => state.user);\r\n  const { shipping } = useSelector((state) => state.cart);\r\n\r\n  const onSubmit = (data) => {\r\n    dispatch(cartActions.saveShipping(data));\r\n    props.history.push(\"payment\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (shipping) {\r\n      setValue(\"address\", shipping.address, { shouldValidate: true });\r\n      setValue(\"city\", shipping.city, { shouldValidate: true });\r\n      setValue(\"country\", shipping.country, { shouldValidate: true });\r\n      setValue(\"postalCode\", shipping.postalCode, { shouldValidate: true });\r\n    }\r\n  }, [shipping]);\r\n\r\n  if (!userInfo) {\r\n    props.history.push(\"/cart\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <CheckoutSteps currentStep={1} />\r\n      <div className=\"form\">\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <ul className=\"form-container\">\r\n            <li>\r\n              <h2>Shipping</h2>\r\n            </li>\r\n            <li>\r\n              <label htmlFor=\"address\">Address</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"address\"\r\n                id=\"address\"\r\n                ref={register({ required: true })}\r\n              />\r\n              <ErrorMsg msg={errors.address?.message} />\r\n            </li>\r\n\r\n            <li>\r\n              <label htmlFor=\"city\">City</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"city\"\r\n                id=\"city\"\r\n                ref={register({ required: true })}\r\n              />\r\n              <ErrorMsg msg={errors.city?.message} />\r\n            </li>\r\n\r\n            <li>\r\n              <label htmlFor=\"country\">Country</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"country\"\r\n                id=\"country\"\r\n                ref={register({ required: true })}\r\n              />\r\n              <ErrorMsg msg={errors.country?.message} />\r\n            </li>\r\n\r\n            <li>\r\n              <label htmlFor=\"postalCode\">Postal Code</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"postalCode\"\r\n                id=\"postalCode\"\r\n                ref={register({ required: true })}\r\n              />\r\n              <ErrorMsg msg={errors.postalCode?.message} />\r\n            </li>\r\n\r\n            <li>\r\n              <button type=\"submit\" className=\"button primary mt-3\">\r\n                Continue\r\n              </button>\r\n            </li>\r\n          </ul>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShippingScreen;\r\n","C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\screens\\member\\RegisterScreen.tsx",["162"],"import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\n\r\nimport * as userActions from \"../../store/actions/userActions\";\r\nimport CheckoutSteps from \"../../components/CheckoutSteps\";\r\nimport ErrorMsg from \"../../components/ErrorMsg\";\r\n\r\nconst schema = yup.object().shape({\r\n  name: yup.string().required(),\r\n  email: yup.string().email().required(),\r\n  password: yup.string().required(),\r\n  rePassword: yup.string().required(\"Re-Enter Password is a required field\"),\r\n});\r\n\r\nconst RegisterScreen = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const query = new URLSearchParams(useLocation().search);\r\n  const redirect = query.get(\"redirect\");\r\n\r\n  const { register, handleSubmit, errors } = useForm({\r\n    resolver: yupResolver(schema),\r\n  });\r\n\r\n  const [rePasswordError, setRePasswordError] = useState(false);\r\n\r\n  const { loading, userInfo, error } = useSelector((state) => state.user);\r\n\r\n  const onSubmit = (data) => {\r\n    if (data.password !== data.rePassword) {\r\n      setRePasswordError(true);\r\n      return;\r\n    }\r\n    dispatch(userActions.register(data.name, data.email, data.password));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      props.history.push(redirect || \"/\");\r\n    }\r\n  }, [userInfo]);\r\n\r\n  return (\r\n    <div>\r\n      {redirect && <CheckoutSteps currentStep={0} />}\r\n      <div className=\"form\">\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <ul className=\"form-container\">\r\n            <li>\r\n              <h2>Create Account</h2>\r\n            </li>\r\n            <li>\r\n              {loading && <div>Loading...</div>}\r\n              {error && <div>{error}</div>}\r\n            </li>\r\n            <li>\r\n              <label htmlFor=\"name\">Name</label>\r\n              <input type=\"text\" name=\"name\" id=\"name\" ref={register} />\r\n              <ErrorMsg msg={errors.name?.message} />\r\n            </li>\r\n            <li>\r\n              <label htmlFor=\"email\">Email</label>\r\n              <input type=\"email\" name=\"email\" id=\"email\" ref={register} />\r\n              <ErrorMsg msg={errors.email?.message} />\r\n            </li>\r\n            <li>\r\n              <label htmlFor=\"password\">Password</label>\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                id=\"password\"\r\n                ref={register}\r\n                onChange={() => {\r\n                  setRePasswordError(false);\r\n                }}\r\n              />\r\n              <ErrorMsg msg={errors.password?.message} />\r\n            </li>\r\n            <li>\r\n              <label htmlFor=\"rePassword\">Re-Enter Password</label>\r\n              <input\r\n                type=\"rePassword\"\r\n                name=\"rePassword\"\r\n                id=\"rePassword\"\r\n                ref={register}\r\n                onChange={() => {\r\n                  setRePasswordError(false);\r\n                }}\r\n              />\r\n              <ErrorMsg msg={errors.rePassword?.message} />\r\n              <ErrorMsg\r\n                msg={\r\n                  rePasswordError &&\r\n                  \"Re-Enter Password must be the same as Password\"\r\n                }\r\n              />\r\n            </li>\r\n            <li>\r\n              <button type=\"submit\" className=\"button primary\">\r\n                Register\r\n              </button>\r\n            </li>\r\n            <li>\r\n              Already have an account?\r\n              <Link\r\n                to={`/signin${redirect ? `?redirect=${redirect}` : ''}`}\r\n                className=\"button secondary text-center\"\r\n              >\r\n                Sign-in\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterScreen;\r\n","C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\screens\\member\\AccountScreen.tsx",[],"C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\components\\ErrorMsg.tsx",[],"C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\screens\\checkout\\OrderSuccessScreen.tsx",[],"C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\screens\\member\\OrderScreen.tsx",["163","164"],"import { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nimport OrderItem from \"../../components/OrderItem\";\r\nimport { API_ROOT } from \"../..\";\r\n\r\nconst OrderScreen = (props) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [orders, setOrders] = useState([]);\r\n\r\n  const { userInfo } = useSelector((state) => state.user);\r\n\r\n  const getOrders = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const { data } = await axios.get(`${API_ROOT}/api/order`, {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      });\r\n      setOrders(data);\r\n    } catch (err) {\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getOrders();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"orders-page\">\r\n      <div className=\"orders-breadcrumb\">\r\n        <span>\r\n          <Link to=\"/account\">Your Account</Link>\r\n        </span>\r\n        <span className=\"mx-2\">{\">\"}</span>\r\n        <span>Your Orders</span>\r\n      </div>\r\n\r\n      <h1 className=\"my-4\">Your Orders</h1>\r\n\r\n      <div className=\"orders-list\">\r\n        {orders.map((order) => (\r\n          <OrderItem key={order._id} order={order} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderScreen;\r\n","C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\screens\\member\\OrderDetailsScreen.tsx",["165","166"],"import { useEffect, useState } from \"react\";\r\n\r\nconst OrderDetailsScreen = (props) => {\r\n  const [details, setDetails] = useState(null);\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  return <div></div>;\r\n};\r\n\r\nexport default OrderDetailsScreen;\r\n","C:\\Users\\lucas\\Documents\\side_projects\\amazona\\frontend\\src\\components\\OrderItem.tsx",[],["167","168"],{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","severity":1,"message":"174","line":26,"column":9,"nodeType":"175","messageId":"176","endLine":26,"endColumn":16},{"ruleId":"177","severity":1,"message":"178","line":30,"column":5,"nodeType":"179","messageId":"180","endLine":30,"endColumn":62},{"ruleId":"173","severity":1,"message":"181","line":33,"column":9,"nodeType":"175","messageId":"176","endLine":33,"endColumn":18},{"ruleId":"177","severity":1,"message":"178","line":35,"column":5,"nodeType":"179","messageId":"180","endLine":35,"endColumn":65},{"ruleId":"169","replacedBy":"182"},{"ruleId":"171","replacedBy":"183"},{"ruleId":"184","severity":1,"message":"185","line":14,"column":6,"nodeType":"186","endLine":14,"endColumn":8,"suggestions":"187"},{"ruleId":"184","severity":1,"message":"188","line":26,"column":6,"nodeType":"186","endLine":26,"endColumn":8,"suggestions":"189"},{"ruleId":"190","severity":1,"message":"191","line":25,"column":1,"nodeType":"192","endLine":50,"endColumn":3},{"ruleId":"190","severity":1,"message":"191","line":23,"column":1,"nodeType":"192","endLine":58,"endColumn":3},{"ruleId":"190","severity":1,"message":"191","line":19,"column":1,"nodeType":"192","endLine":35,"endColumn":3},{"ruleId":"184","severity":1,"message":"185","line":76,"column":6,"nodeType":"186","endLine":76,"endColumn":15,"suggestions":"193"},{"ruleId":"184","severity":1,"message":"185","line":80,"column":6,"nodeType":"186","endLine":80,"endColumn":8,"suggestions":"194"},{"ruleId":"184","severity":1,"message":"195","line":31,"column":6,"nodeType":"186","endLine":31,"endColumn":8,"suggestions":"196"},{"ruleId":"184","severity":1,"message":"197","line":37,"column":6,"nodeType":"186","endLine":37,"endColumn":16,"suggestions":"198"},{"ruleId":"173","severity":1,"message":"199","line":1,"column":21,"nodeType":"175","messageId":"176","endLine":1,"endColumn":29},{"ruleId":"184","severity":1,"message":"200","line":38,"column":6,"nodeType":"186","endLine":38,"endColumn":16,"suggestions":"201"},{"ruleId":"173","severity":1,"message":"202","line":9,"column":11,"nodeType":"175","messageId":"176","endLine":9,"endColumn":21},{"ruleId":"184","severity":1,"message":"203","line":48,"column":6,"nodeType":"186","endLine":48,"endColumn":17,"suggestions":"204"},{"ruleId":"184","severity":1,"message":"205","line":43,"column":6,"nodeType":"186","endLine":43,"endColumn":16,"suggestions":"206"},{"ruleId":"184","severity":1,"message":"197","line":45,"column":6,"nodeType":"186","endLine":45,"endColumn":16,"suggestions":"207"},{"ruleId":"173","severity":1,"message":"208","line":10,"column":10,"nodeType":"175","messageId":"176","endLine":10,"endColumn":17},{"ruleId":"184","severity":1,"message":"209","line":32,"column":6,"nodeType":"186","endLine":32,"endColumn":8,"suggestions":"210"},{"ruleId":"173","severity":1,"message":"211","line":4,"column":10,"nodeType":"175","messageId":"176","endLine":4,"endColumn":17},{"ruleId":"173","severity":1,"message":"212","line":4,"column":19,"nodeType":"175","messageId":"176","endLine":4,"endColumn":29},{"ruleId":"169","replacedBy":"213"},{"ruleId":"171","replacedBy":"214"},"no-native-reassign",["215"],"no-negated-in-lhs",["216"],"@typescript-eslint/no-unused-vars","'overlay' is assigned a value but never used.","Identifier","unusedVar","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","'closeMenu' is assigned a value but never used.",["215"],["216"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["217"],"React Hook useEffect has missing dependencies: 'dispatch' and 'paramId'. Either include them or remove the dependency array.",["218"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["219"],["220"],"React Hook useEffect has missing dependencies: 'dispatch', 'paramId', and 'qty'. Either include them or remove the dependency array.",["221"],"React Hook useEffect has missing dependencies: 'props.history' and 'redirect'. Either include them or remove the dependency array.",["222"],"'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'payment' and 'setValue'. Either include them or remove the dependency array.",["223"],"'ParamTypes' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'props.history'. Either include them or remove the dependency array.",["224"],"React Hook useEffect has a missing dependency: 'setValue'. Either include it or remove the dependency array.",["225"],["226"],"'loading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getOrders'. Either include it or remove the dependency array.",["227"],"'details' is assigned a value but never used.","'setDetails' is assigned a value but never used.",["215"],["216"],"no-global-assign","no-unsafe-negation",{"desc":"228","fix":"229"},{"desc":"230","fix":"231"},{"desc":"232","fix":"233"},{"desc":"228","fix":"234"},{"desc":"235","fix":"236"},{"desc":"237","fix":"238"},{"desc":"239","fix":"240"},{"desc":"241","fix":"242"},{"desc":"243","fix":"244"},{"desc":"237","fix":"245"},{"desc":"246","fix":"247"},"Update the dependencies array to be: [dispatch]",{"range":"248","text":"249"},"Update the dependencies array to be: [dispatch, paramId]",{"range":"250","text":"251"},"Update the dependencies array to be: [dispatch, success]",{"range":"252","text":"253"},{"range":"254","text":"249"},"Update the dependencies array to be: [dispatch, paramId, qty]",{"range":"255","text":"256"},"Update the dependencies array to be: [props.history, redirect, userInfo]",{"range":"257","text":"258"},"Update the dependencies array to be: [payment, setValue, shipping]",{"range":"259","text":"260"},"Update the dependencies array to be: [dispatch, orderInfo, props.history]",{"range":"261","text":"262"},"Update the dependencies array to be: [setValue, shipping]",{"range":"263","text":"264"},{"range":"265","text":"258"},"Update the dependencies array to be: [getOrders]",{"range":"266","text":"267"},[441,443],"[dispatch]",[836,838],"[dispatch, paramId]",[1899,1908],"[dispatch, success]",[1985,1987],[906,908],"[dispatch, paramId, qty]",[1139,1149],"[props.history, redirect, userInfo]",[1089,1099],"[payment, setValue, shipping]",[1240,1251],"[dispatch, orderInfo, props.history]",[1434,1444],"[setValue, shipping]",[1446,1456],[825,827],"[getOrders]"]